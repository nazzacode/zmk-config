/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 // IDEA: Have 2 keymaps (1 as close to QWERTY satndard as possible, 1 more opinionated) 

// Imports
// ---------------------------------------------------------------------------
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

/ {
// Behaviors
// ---------------------------------------------------------------------------
    behaviors {
        mkt: mouse_key_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;   
            bindings = <&mo>, <&mkp>;
        }; 
    };

// Keymap
// ---------------------------------------------------------------------------
    keymap { compatible = "zmk,keymap";

// : DEFAULT Layer (0)
// -----------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | 
// |  A  |  S  |  D  |  F  |  G  |   |  ;  |  H  |  J  |  K  |  L  | 
//// GUI | ALT | CRL | SFT | HYP       HYP | SFT | CRL | ALT | GUI   // | Hold
////    ESC | TAB | SPC                         RET |     | BSP      // | Chord 
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | 
//             | MB1 | BSP | SPC |   | RET |     | MB1 |             // 1 space? ESC, TAB, DEL? (if we could get 4...)
////             L3  | L0  | L4        L2  |  L1 |  L3               // | Hold 
        default_layer{ bindings = <
   &kp Q      &kp W      &kp E       &kp R       &kp T         &kp Y     &kp U       &kp I       &kp O      &kp P    
   &kp A      &kp S      &kp D       &mt F       &kp G         &kp SEMI  &kp H       &kp J       &kp K      &kp L
   &kp Z      &kp X      &kp C       &kp V       &kp B         &kp N     &kp M       &kp COMMA   &kp DOT    &kp FSLH 
                                     &kp BSPC    &kp SPACE     &kp RET   &kp SPACE 
                                     &mkp MB1                            &mkp MB1
        >; };

// PREVIOUS COMPLEX VERSION CAUSING ERRORS?
//         default_layer{ bindings = <
//    &kp Q      &kp W      &kp E       &kp R       &kp T         &kp Y     &kp U       &kp I       &kp O      &kp P    
//    &mt LGUI A &mt LALT S &mt LCTRL D &mt LSHFT F &kp G         &kp SEMI  &mt RSHFT H  &mt RCTRL J &mt RALT K &mt RGUI L
//    &kp Z      &kp X      &kp C       &kp V       &kp B         &kp N     &kp M       &kp COMMA   &kp DOT    &kp FSLH 
//                          &mkt 3 MB1  &lt 0 BSPC  &lt 4 SPACE   &lt 2 RET &lt 1 SPACE &mkt 3 MB1
//         >; };

// : SYMBOL Layer (1)
// ------------------------------------------------------------------
// |  !  |  @  |  £  |  $  |  %  |   |  ^  |  &  |  `  |  '  |  "  |
// |  <  |  (  |  )  |  >  |  ?  |   |  :  |  +  |  -  |  *  |  /  |
// |  {  |  [  |  ]  |  }  |  #  |   |  _  |  =  |  ~  |  |  |  \  |
//             | MB1 | BSP | SPC |   | RET |     | MB1 |             
////             L1  | L2  | L3        L4  |  L5 |  L6               
//         symbol_layer{ bindings = <
//    &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp GRAVE  &kp APOS  &kp DQT
//    &kp LT   &kp LPAR &kp RPAR &kp GT   &kp QMARK   &kp COLON &kp PLUS  &kp MINUS  &kp ASTRK &kp FSLH
//    &kp LBRC &kp LBKT &kp RBKT &kp RBRC &kp NUHS    &kp UNDER &kp EQUAL &kp TILDE2 &kp PIPE  &kp BSLH
//                      &trans   &trans   &trans      &trans    &trans    &trans    
//         >; };

// : NUM Layer (2)
// -----------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |PSCRN| HOME| END | INS | DEL |
// |  6  |  7  |  8  |  9  |  0  |   |     | LFT | DWN |  UP | RGT |
// |     |  %  |  .  |  =  |     |   |     |  +  |  -  |  *  |  /  |
//             | MB1 | BSP | SPC |   | RET |     | MB1 |
////             L1  | L2  | L3        L4  |  L5 |  L6               
//         num_layer{ bindings = <
//    &kp N1 &kp N2    &kp N3  &kp N4    &kp N5   &kp PSCRN &kp HOME &kp END   &kp INS   &kp DEL
//    &kp N6 &kp N7    &kp N8  &kp N9    &kp N0   &trans    &kp LEFT &kp DOWN  &kp UP    &kp RIGHT
//    &trans &kp PRCNT &kp DOT &kp EQUAL &trans   &trans    &kp PLUS &kp MINUS &kp ASTRK &kp FSLH
//                     &trans  &trans    &trans   &trans    &trans   &trans    
//         >; };
// TODO: try 3x3 numpad?

// : MOUSE Layer (3)
// -----------------------------------------------------------------
// |     |     |     |     |     |   |     |     |     |     |     |
// | MB4 | MB2 | MB3 | MB1 | MB5 |   | MB5 | MB1 | MB3 | MB2 | MB4 |
// |     |     |     |     |     |   |     |     |     |     |     |
//             | MB1 | BSP | SPC |   | RET |     | MB1 |             
////             L1  | L2  | L3        L4  |  L5 |  L6               
//         mouse_layer{ bindings = <
//    &none    &none    &none    &none    &none     &none    &none    &none    &none    &none  
//    &mkp MB4 &mkp MB2 &mkp MB3 &mkp MB1 &mkp MB5  &mkp MB5 &mkp MB1 &mkp MB3 &mkp MB2 &mkp MB4
//    &none    &none    &none    &none    &none     &none    &none    &none    &none    &none  
//                      &trans   &trans   &trans    &trans   &trans   &trans
//         >; };

// : FUNCTION Layer (4)
// ------------------------------------------------------------------
// |  F6 |  F7 |  F8 |  F9 | F10 |   |     |     |     |     |     |
// |  F1 |  F2 |  F3 |  F4 |  F5 |   |     |     |     |     |     |
// |     |     | F11 | F12 |     |   |     |     |     |     |     |
//             | MB1 | BSP | SPC |   | RET |     | MB1 |             
////             L1  | L2  | L3        L4  |  L5 |  L6               
//         function_layer{ bindings = <
//    &kp F6 &kp F7 &kp F8  &kp F9  &kp F10   &none    &none    &none    &none    &none
//    &kp F1 &kp F2 &kp F3  &kp F4  &kp F5    &none    &none    &none    &none    &none
//    &none  &none  &kp F11 &kp F12 &none     &none    &none    &none    &none    &none
//                  &trans  &trans  &trans    &trans   &trans   &trans
//         >; };

// : MEDIA Layer
// ------------------------------------------------------------------
// |     |  PP | PRV | NXT |     |   |     |     |     |     |     |
// |  BD |  BU |  VD |  VU | MTE |   |     |     |     |     |     |
// |     |     |  SS |     |     |   |     |     |     |     |     |
//             |     |     |     |   |     |     |     |
// WHERE: BD=brightness-down, VU=volume-up, MTE=mute, PP=play-pause-toggle, SS=screenshot

// : SETTINGS Layer
// -----------------------------------------------------------------
// | RST | BCL |     |     |     |   |     |     |     |     |     |
// |  B1 |  B2 |  B3 |  B4 |     |   |     |     |     |     |     |
// |     |     |     |     |     |   |     |     |     |     |     |
//             |     |     |     |   |     |     |     |
// WHERE: RST=reset, BCL=bluetooth-clear

    };
};



// Layer Template
// ---------------------------------------------------------------------------

// : NAME Layer
// // -----------------------------------------------------------------
// // |     |     |     |     |     |   |     |     |     |     |     |
// // |     |     |     |     |     |   |     |     |     |     |     |
// // |     |     |     |     |     |   |     |     |     |     |     |
// //             |     |     |     |   |     |     |     |
        // <layer_name>_layer{ bindings = <
        // >; };


// Keymap Reference
// ---------------------------------------------------------------------------


// : DEFAULT Layer (0)
// -----------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | 
// |  A  |  S  |  D  |  F  |  G  |   |  ;  |  H  |  J  |  K  |  L  | 
//// GUI | ALT | CRL | SFT | HYP       HYP | SFT | CRL | ALT | GUI   // | Hold
////    ESC | TAB | SPC                         RET |     | BSP      // | Chord 
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | 
//             | MB1 | BSP | SPC |   | RET |     | MB1 |             // 1 space? ESC, TAB, DEL? (if we could get 4...)
////             L3  | L0  | L4        L2  |  L1 |  L3               // | Hold 

// : SYMBOL Layer (1)
// ------------------------------------------------------------------
// |  !  |  @  |  £  |  $  |  %  |   |  ^  |  &  |  `  |  '  |  "  |
// |  <  |  (  |  )  |  >  |  ?  |   |  :  |  +  |  -  |  *  |  /  |
// |  {  |  [  |  ]  |  }  |  #  |   |  _  |  =  |  ~  |  |  |  \  |
//             | MB1 | BSP | SPC |   | RET |     | MB1 |             
////             L3  | L0  | L4        L2  |  L1 |  L3               // | Hold 

// : NUM Layer (2)
// -----------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |PSCRN| HOME| END | INS | DEL |
// |  6  |  7  |  8  |  9  |  0  |   |     | LFT | DWN |  UP | RGT |
// |     |  %  |  .  |  =  |     |   |     |  +  |  -  |  *  |  /  |
//             | MB1 | BSP | SPC |   | RET |     | MB1 |
////             L3  | L0  | L4        L2  |  L1 |  L3               // | Hold 

// : MOUSE Layer (3)
// -----------------------------------------------------------------
// |     |     |     |     |     |   |     |     |     |     |     |
// | MB4 | MB2 | MB3 | MB1 | MB5 |   | MB5 | MB1 | MB3 | MB2 | MB4 |
// |     |     |     |     |     |   |     |     |     |     |     |
//             | MB1 | BSP | SPC |   | RET |     | MB1 |             
////             L3  | L0  | L4        L2  |  L1 |  L3               // | Hold 

// : FUNCTION Layer (4)
// ------------------------------------------------------------------
// |  F6 |  F7 |  F8 |  F9 | F10 |   |     |     |     |     |     |
// |  F1 |  F2 |  F3 |  F4 |  F5 |   |     |     |     |     |     |
// |     |     | F11 | F12 |     |   |     |     |     |     |     |
//             | MB1 | BSP | SPC |   | RET |     | MB1 |             
////             L3  | L0  | L4        L2  |  L1 |  L3               // | Hold 
